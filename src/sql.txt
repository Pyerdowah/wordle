drop table statsAndWords, statistics, words, users cascade;
create table users(userId bigserial primary key, login varchar(255) not null unique, password varchar(255));
create table words(wordId bigserial primary key, wordName varchar(5) not null unique);
create table statistics(statisticId bigserial primary key, numberOfTries int, userId bigint references users(userId), wordId bigint references words(wordId));
create table statsAndWords(wordId bigint references words(wordId), statisticId bigint references statistics(statisticId), constraint statsAndWordsId primary key( wordId, statisticId));
--dodanie słów/slowa do banku
INSERT INTO words(wordname) VALUES ('PLANE'), ('SQUAD'), ('KHAKI'), ('TWICE');
--usuniecie slowa z banku
delete from words where wordName = 'KHAKI';
delete from words where wordid = 4;
--zwrocenie listy wszystkich slow z banku
select * from words;
insert into words(wordname) values ('KHAKI');
--zliczenie slow z banku
select count(*) from words;
--zwrocenie slowa z banku o danym id
select wordname from words where wordid = 1;
--zmiana danego slowa z banku
update words set wordname = 'PLATE' where wordname = 'PLANE';

INSERT INTO users(login, password) VALUES ('pyerdowah', '2137'), ('abuu', 'kupa'), ('tralala', 'lala'), ('user4', 'haslo');
select * from users;
delete from users where login = 'abuu';
select count(*) from users;
select login from users where userid = 1;
update users set login = 'trala' where login = 'tralala';

INSERT INTO statistics(numberoftries, userid, wordid) VALUES (4, 1, 1), (3, 1, 2), (2, 4, 3), (4, 2, 4);
select * from statistics;
delete from statistics where userid = 2;
select count(*) from statistics;
select * from statistics where userid = 1;
update statistics set numberoftries = 4 where numberoftries = 3;


INSERT INTO statsandwords(wordid, statisticid) VALUES (1,3), (4, 1), (3, 1), (2, 4), (4, 2);
select * from statsandwords;
delete from statsandwords where wordid = 2;
select count(*) from statsandwords;
select * from statsandwords where statisticid = 1;

